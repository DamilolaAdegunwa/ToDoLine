// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoLine.Data;

namespace ToDoLine.Migrations
{
    [DbContext(typeof(ToDoLineDbContext))]
    partial class ToDoLineDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToDoLine.Model.ToDoGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedById");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("ToDoGroups");
                });

            modelBuilder.Entity("ToDoLine.Model.ToDoGroupOptions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("HideCompletedToDoItems");

                    b.Property<int>("SortedBy");

                    b.Property<string>("Theme");

                    b.Property<Guid>("ToDoGroupId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ToDoGroupId");

                    b.HasIndex("UserId", "ToDoGroupId")
                        .IsUnique();

                    b.ToTable("ToDoGroupOptionsList");
                });

            modelBuilder.Entity("ToDoLine.Model.ToDoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CompletedById");

                    b.Property<Guid>("CreatedById");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<DateTimeOffset?>("DueDate");

                    b.Property<bool>("IsCompleted");

                    b.Property<bool>("IsImportant");

                    b.Property<DateTimeOffset>("ModifiedOn");

                    b.Property<string>("Notes");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<Guid?>("ToDoGroupId");

                    b.HasKey("Id");

                    b.HasIndex("CompletedById");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ToDoGroupId");

                    b.ToTable("ToDoItems");
                });

            modelBuilder.Entity("ToDoLine.Model.ToDoItemOptions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset?>("RemindOn");

                    b.Property<DateTimeOffset?>("ShowInMyDayOn");

                    b.Property<Guid>("ToDoItemId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ToDoItemId");

                    b.HasIndex("UserId", "ToDoItemId")
                        .IsUnique();

                    b.ToTable("ToDoItemOptionsList");
                });

            modelBuilder.Entity("ToDoLine.Model.ToDoItemStep", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsCompleted");

                    b.Property<string>("Text");

                    b.Property<Guid>("ToDoItemId");

                    b.HasKey("Id");

                    b.HasIndex("ToDoItemId");

                    b.ToTable("ToDoItemSteps");
                });

            modelBuilder.Entity("ToDoLine.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ToDoLine.Model.ToDoGroup", b =>
                {
                    b.HasOne("ToDoLine.Model.User", "CreatedBy")
                        .WithMany("OwnedToDoGroups")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ToDoLine.Model.ToDoGroupOptions", b =>
                {
                    b.HasOne("ToDoLine.Model.ToDoGroup", "ToDoGroup")
                        .WithMany("Options")
                        .HasForeignKey("ToDoGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ToDoLine.Model.User", "User")
                        .WithMany("ToDoGroupOptionsList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ToDoLine.Model.ToDoItem", b =>
                {
                    b.HasOne("ToDoLine.Model.User", "CompletedBy")
                        .WithMany("CompletedToDoItems")
                        .HasForeignKey("CompletedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ToDoLine.Model.User", "CreatedBy")
                        .WithMany("OwnedToDoItems")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ToDoLine.Model.ToDoGroup", "ToDoGroup")
                        .WithMany("Items")
                        .HasForeignKey("ToDoGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ToDoLine.Model.ToDoItemOptions", b =>
                {
                    b.HasOne("ToDoLine.Model.ToDoItem", "ToDoItem")
                        .WithMany("Options")
                        .HasForeignKey("ToDoItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ToDoLine.Model.User", "User")
                        .WithMany("ToDoItemOptionsList")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ToDoLine.Model.ToDoItemStep", b =>
                {
                    b.HasOne("ToDoLine.Model.ToDoItem", "ToDoItem")
                        .WithMany("Steps")
                        .HasForeignKey("ToDoItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
